// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              BigInt           @id // Telegram ID
  tag             String? // Telegram tag
  name            String // Telegram username
  musicSubmission MusicSubmission? // TODO: rename to music, make 1 to 1 relation instead
  guesses         Guess[]
}

model MusicSubmission {
  id     Int    @id @default(autoincrement())
  fileId String
  user   User   @relation(fields: [userId], references: [id])
  userId BigInt

  // Add relation to game rounds
  rounds GameRound[]

  @@unique([userId]) // Keep the unique constraint on userId
}

model Game {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  status       String      @default("ACTIVE") // ACTIVE, FINISHED
  currentRound Int         @default(0)
  rounds       GameRound[]
}

model GameRound {
  id           Int             @id @default(autoincrement())
  index        Int
  game         Game            @relation(fields: [gameId], references: [id])
  gameId       Int
  submission   MusicSubmission @relation(fields: [submissionId], references: [id])
  submissionId Int
  guesses      Guess[]

  @@unique([gameId, index])
}

model Guess {
  id        Int       @id @default(autoincrement())
  round     GameRound @relation(fields: [roundId], references: [id])
  roundId   Int
  user      User      @relation(fields: [userId], references: [id])
  userId    BigInt
  guessedId BigInt // The ID of the user they guessed
  isCorrect Boolean
  createdAt DateTime  @default(now())

  @@unique([roundId, userId]) // One guess per user per round
}
