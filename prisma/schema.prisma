generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              BigInt           @id // Telegram ID
  tag             String? // Telegram tag
  name            String // Telegram username
  musicSubmission MusicSubmission? // TODO: rename to music, make 1 to 1 relation instead
  guesses         Guess[]
}

model MusicSubmission {
  id     Int         @id @default(autoincrement())
  fileId String
  hint   String? // Optional hint for the song
  user   User        @relation(fields: [userId], references: [id])
  userId BigInt
  rounds GameRound[]

  @@unique([userId])
}

model Game {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  status       String      @default("ACTIVE") // ACTIVE, FINISHED
  currentRound Int         @default(0)
  rounds       GameRound[]
}

model GameRound {
  id            Int             @id @default(autoincrement())
  index         Int
  game          Game            @relation(fields: [gameId], references: [id])
  gameId        Int
  submission    MusicSubmission @relation(fields: [submissionId], references: [id])
  submissionId  Int
  hintShown     Boolean         @default(false) // Track if hint was revealed
  hintShownAt   DateTime? // When the hint was revealed
  guesses       Guess[]
  infoMessageId Int? // Message ID of the info message
  chatId        BigInt? // Telegram chat ID which the info message was sent

  @@unique([gameId, index])
}

model Guess {
  id          Int       @id @default(autoincrement())
  round       GameRound @relation(fields: [roundId], references: [id])
  roundId     Int
  user        User      @relation(fields: [userId], references: [id])
  userId      BigInt
  guessedId   BigInt // The ID of the user they guessed
  isCorrect   Boolean
  points      Int // Store points earned for this guess
  createdAt   DateTime  @default(now())
  isLateGuess Boolean   @default(false) // If guessed after round ended

  @@unique([roundId, userId])
}
