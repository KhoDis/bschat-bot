import { IBotContext } from "@/context/context.interface";
import { Composer } from "telegraf";
import { MemberService } from "@/modules/common/member.service";
import { TextService } from "@/modules/common/text.service";
import { inject, injectable } from "inversify";
import { CommandContext, TYPES } from "@/types";
import getCommandArgs from "@/utils/getCommandArgs";

@injectable()
export class JokerComposer extends Composer<IBotContext> {
  private readonly roasts = [
    "–¢–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –º–æ–∂–Ω–æ —É–º–µ—Å—Ç–∏—Ç—å –Ω–∞ —Ñ–ª–µ—à–∫–µ 256 –ö–±.",
    "–ï—Å–ª–∏ –±—ã —Ç—É–ø–æ—Å—Ç—å —Å–≤–µ—Ç–∏–ª–∞—Å—å, —Ç—ã –±—ã–ª –±—ã —Å–æ–ª–Ω—Ü–µ–º.",
    "–¢—ã –∫–∞–∫ Wi-Fi –≤ –º–µ—Ç—Ä–æ ‚Äì –∏–Ω–æ–≥–¥–∞ –ª–æ–≤–∏—à—å, –Ω–æ –≤ —Ü–µ–ª–æ–º –Ω–µ—Ç.",
    "–¢–≤–æ–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å ‚Äì —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Å–º–∞–π–ª—ã.",
    "–¢—ã ‚Äî –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ, —á—Ç–æ —ç–≤–æ–ª—é—Ü–∏—è –∏–Ω–æ–≥–¥–∞ –∏–¥—ë—Ç –≤ –æ–±—Ä–∞—Ç–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É.",
    "–£ —Ç–µ–±—è —Å—Ç–æ–ª—å–∫–æ —Ö–∞—Ä–∏–∑–º—ã, —Å–∫–æ–ª—å–∫–æ FPS –≤ Minecraft –Ω–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ.",
    "–ï—Å–ª–∏ –±—ã –±—ã–ª –∫–æ–Ω–∫—É—Ä—Å –Ω–∞ —Ö—É–¥—à–µ–µ –æ–ø—Ä–∞–≤–¥–∞–Ω–∏–µ, —Ç—ã –±—ã –ø—Ä–æ–∏–≥—Ä–∞–ª.",
    "–¢—ã –Ω–∞—Å—Ç–æ–ª—å–∫–æ –ª–µ–Ω–∏–≤—ã–π, —á—Ç–æ —Ç–≤–æ—è —Ç–µ–Ω—å –¥–≤–∏–≥–∞–µ—Ç—Å—è –±–æ–ª—å—à–µ, —á–µ–º —Ç—ã.",
    "–Ø –±—ã —Ç–µ–±—è —É–Ω–∏–∑–∏–ª, –Ω–æ –ø—Ä–∏—Ä–æ–¥–∞ —É–∂–µ —Å–¥–µ–ª–∞–ª–∞ —ç—Ç–æ –∑–∞ –º–µ–Ω—è.",
    "–¢—ã –∫–∞–∫ –±—É–¥–∏–ª—å–Ω–∏–∫ –±–µ–∑ –±–∞—Ç–∞—Ä–µ–π–∫–∏ ‚Äì –±–µ—Å–ø–æ–ª–µ–∑–µ–Ω –∏ —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—à—å.",
    "–¢–≤–æ–π IQ –º–æ–∂–Ω–æ –∏–∑–º–µ—Ä—è—Ç—å –≤ –∫–æ–º–Ω–∞—Ç–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ (–≤ –≥—Ä–∞–¥—É—Å–∞—Ö –¶–µ–ª—å—Å–∏—è).",
    "–ï—Å–ª–∏ –±—ã —Ç—É–ø–æ—Å—Ç—å –±—ã–ª–∞ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º, —Ç—ã –±—ã –ø–æ–ª—É—á–∏–ª –ø–æ–∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Å—Ä–æ–∫.",
    "–£ —Ç–µ–±—è –µ—Å—Ç—å —Ç–∞–ª–∞–Ω—Ç! –ü—Ä–∞–≤–¥–∞, –Ω–∏–∫—Ç–æ –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω—è–ª, –∫–∞–∫–æ–π.",
    "–¢–≤–æ–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ã —Ç–∞–∫–∏–µ –∂–µ —Å–ª–∞–±—ã–µ, –∫–∞–∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –≤ –¥–µ—Ä–µ–≤–Ω–µ.",
    "–¢—ã –∫–∞–∫ NPC –≤ —Å—Ç–∞—Ä—ã—Ö –∏–≥—Ä–∞—Ö ‚Äì –ø–æ–≤—Ç–æ—Ä—è–µ—à—å –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã.",
    "–¢—ã –ø—ã—Ç–∞–µ—à—å—Å—è –±—ã—Ç—å —É–º–Ω—ã–º, –Ω–æ —Ç–≤–æ–∏ –º–æ–∑–≥–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏.",
    "–ï—Å–ª–∏ –±—ã –±–æ–ª—Ç–æ–≤–Ω—è —Å–∂–∏–≥–∞–ª–∞ –∫–∞–ª–æ—Ä–∏–∏, —Ç—ã –±—ã–ª –±—ã –º–æ–¥–µ–ª—å—é.",
    "–¢—ã –∫–∞–∫ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å 2005 –≥–æ–¥–∞ ‚Äì —Ç–æ—Ä–º–æ–∑–∏—à—å –∏ –±–µ—Å–ø–æ–ª–µ–∑–µ–Ω.",
    "–¢—ã –º–æ–≥ –±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –û–ª–∏–º–ø–∏–∞–¥–µ‚Ä¶ –ø–æ —Ñ–µ–π–ª–∞–º.",
    "–¢—ã –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Å–∫—É—á–Ω—ã–π, —á—Ç–æ –¥–∞–∂–µ Google –Ω–µ —Ö–æ—á–µ—Ç —Ç–µ–±—è –∏—Å–∫–∞—Ç—å.",
    "–ï—Å–ª–∏ –±—ã –±—ã–ª —Ç—É—Ä–Ω–∏—Ä –ø–æ –æ—à–∏–±–∫–∞–º, —Ç—ã –±—ã –æ—à–∏–±—Å—è —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.",
    "–¢—ã –∫–∞–∫ –±–∞—Ç–∞—Ä–µ–π–∫–∞ –∏–∑ –¥–µ—à—ë–≤–æ–≥–æ —Ñ–æ–Ω–∞—Ä–∏–∫–∞ ‚Äì —Ä–∞–∑—Ä—è–∂–∞–µ—à—å—Å—è –≤ —Å–∞–º—ã–π –≤–∞–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç.",
    "–¢—ã –ø—Ä–æ–±–æ–≤–∞–ª –º–æ–ª—á–∞—Ç—å? –≠—Ç–æ —Ç–µ–±–µ –∏–¥—ë—Ç –±–æ–ª—å—à–µ, —á–µ–º –≥–æ–≤–æ—Ä–∏—Ç—å.",
    "–¢–≤–æ–∏ —à—É—Ç–∫–∏ —Ç–∞–∫–∏–µ —Å—Ç–∞—Ä—ã–µ, —á—Ç–æ –∏–º–∏ –º–æ–∂–Ω–æ –∏–∑–±–∏–≤–∞—Ç—å –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤.",
    "–¢—ã –∫–∞–∫ GPS –≤ –ø–ª–æ—Ö–æ–π –ø–æ–≥–æ–¥–µ ‚Äì —Ç—É–ø–∏—à—å –∏ –≤–µ–¥—ë—à—å –Ω–µ —Ç—É–¥–∞.",
    "–ï—Å–ª–∏ –±—ã —Ç—É–ø–æ—Å—Ç—å –ø—Ä–æ–¥–∞–≤–∞–ª–∏, —Ç—ã –±—ã–ª –±—ã –±–∏—Ç–∫–æ–∏–Ω–æ–º 2010 –≥–æ–¥–∞ ‚Äì —Ü–µ–Ω–Ω–æ—Å—Ç—å –Ω—É–ª–µ–≤–∞—è, –Ω–æ —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–µ–¥–∫–∏–π.",
    "–¢—ã –Ω–µ –∏–∑ —Ç–µ—Ö, –∫—Ç–æ —É—á–∏—Ç—Å—è –Ω–∞ –æ—à–∏–±–∫–∞—Ö. –¢—ã –ø—Ä–æ—Å—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—à—å –∏—Ö.",
    "–ï—Å–ª–∏ –±—ã –ª–µ–Ω—å –±—ã–ª–∞ —Å–ø–æ—Ä—Ç–æ–º, —Ç—ã –±—ã –Ω–µ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª ‚Äì –ø–æ—Ç–æ–º—É —á—Ç–æ –ª–µ–Ω—å.",
    "–¢—ã —Ç–∞–∫ —á–∞—Å—Ç–æ –æ—à–∏–±–∞–µ—à—å—Å—è, —á—Ç–æ —Ç–≤–æ—è –∂–∏–∑–Ω—å ‚Äì —ç—Ç–æ speedrun –ø–æ —Ñ–µ–π–ª–∞–º.",
    "–¢–µ–±–µ –ø–ª–∞—Ç—è—Ç –∑–∞ —Ç–æ, —á—Ç–æ–±—ã —Ç—ã –±—ã–ª —Ç–∞–∫–∏–º? –ü–æ—Ç–æ–º—É —á—Ç–æ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Ç—ã –ø—Ä–æ—Ñ–∏.",
    "–¢—ã –∫–∞–∫ —Å—Ç–∞—Ä—ã–π —Ç–µ–ª–µ–≤–∏–∑–æ—Ä ‚Äì –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å–ª–∞–±–∞—è, –∑–≤—É–∫ —Ä–∞–∑–¥—Ä–∞–∂–∞—é—â–∏–π, –Ω–æ –≤—ã–±—Ä–æ—Å–∏—Ç—å –∂–∞–ª–∫–æ.",
    "–¢—ã ‚Äî –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ, —á—Ç–æ –∑–∞–∫–æ–Ω—ã —Ñ–∏–∑–∏–∫–∏ –º–æ–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å, –≤–µ–¥—å —É —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∏—Ç—è–∂–µ–Ω–∏—è.",
  ];

  constructor(
    @inject(TYPES.MemberService) private readonly userService: MemberService,
    @inject(TYPES.TextService) private readonly text: TextService,
  ) {
    super();
    this.setupHandlers();
  }

  private async sleep(ms: number): Promise<void> {
    return new Promise((resolve) => setTimeout(resolve, ms));
  }

  private setupHandlers(): void {
    this.command("banbs", this.handleBanbs.bind(this));
    this.command("summon_demons", this.handleSummonDemons.bind(this));
    this.command("fuck_music", this.handleFuckMusic.bind(this));
    this.command("die", this.handleDie.bind(this));
    this.command("roast", this.handleRoast.bind(this));
    this.command("rickroll", this.handleRickroll.bind(this));
    this.command("delete_account", this.handleDeleteAccount.bind(this));
    this.command("self_destruct", this.handleSelfDestruct.bind(this));
    this.command("ping_behruz", this.handlePingBehruz.bind(this));
    this.command("greet", this.handleGreet.bind(this));
    this.command("terebinder", this.handleTerebinder.bind(this));
    this.command("8ball", this.handle8ball.bind(this));
  }

  private async handleGreet(ctx: CommandContext): Promise<void> {
    await ctx.reply(this.text.get("greetings"));
  }

  private async handleBanbs(ctx: CommandContext): Promise<void> {
    const commandArgs = getCommandArgs(ctx);
    if (commandArgs.length < 2) {
      await ctx.reply("–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      return;
    }

    const target = commandArgs[1];
    await ctx.reply(`${target} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.`);

    await this.sleep(5000);
    await ctx.reply("–õ–∞–¥–Ω–æ, —à—É—á—É. –£ –Ω–∞—Å —Ç—É—Ç –¥–µ–º–æ–∫—Ä–∞—Ç–∏—è. –ü–æ–∫–∞ —á—Ç–æ...");
  }

  private async handleSummonDemons(ctx: CommandContext): Promise<void> {
    await ctx.reply("üîÆ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∏—Ç—É–∞–ª –ø—Ä–∏–∑—ã–≤–∞...");
    await this.sleep(2000);
    await ctx.reply("üåë –¢—å–º–∞ —Å–≥—É—â–∞–µ—Ç—Å—è...");
    await this.sleep(3000);
    await ctx.reply("üïØÔ∏è –ö—Ç–æ-—Ç–æ –ø–æ—Å—Ç—É—á–∞–ª—Å—è –≤ –¥–≤–µ—Ä—å...");
    await this.sleep(4000);
    await ctx.reply(
      "üëÅÔ∏è –û–Ω –∑–¥–µ—Å—å. –û, –Ω–µ—Ç. –û–ù –°–ú–û–¢–†–ò–¢ –ù–ê –¢–ï–ë–Ø, @" + ctx.from.username,
    );
    await this.sleep(6000);
    await ctx.reply("–õ–∞–¥–Ω–æ, —à—É—á—É. –ò–ª–∏ –Ω–µ—Ç?");
  }

  private async handleFuckMusic(ctx: CommandContext): Promise<void> {
    await ctx.reply(this.text.get("fuckMusic"));
  }

  private async handleDie(ctx: CommandContext): Promise<void> {
    const currentYear = new Date().getFullYear();
    await ctx.reply(
      `${ctx.from.first_name} –±–æ–ª—å—à–µ –Ω–µ—Ç —Å –Ω–∞–º–∏... üòµ\n\nR.I.P. ${ctx.from.first_name}, ${currentYear}-${currentYear + 50} üïØÔ∏è`,
    );
  }

  private async handleRoast(ctx: CommandContext): Promise<void> {
    const mention = getCommandArgs(ctx)[1] || "@–Ω–µ—É–¥–∞—á–Ω–∏–∫";
    const roast = this.roasts[Math.floor(Math.random() * this.roasts.length)];
    await ctx.reply(`${mention}, ${roast}`);
  }

  private async handleRickroll(ctx: CommandContext): Promise<void> {
    await ctx.reply(
      "–°—Ä–æ—á–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å! –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: https://www.youtube.com/watch?v=dQw4w9WgXcQ",
    );
  }

  private async handleDeleteAccount(ctx: CommandContext): Promise<void> {
    await ctx.reply(
      "‚ö†Ô∏è –í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω. –£–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥... üò±",
    );

    for (let i = 10; i > 0; i--) {
      await this.sleep(1000);
      await ctx.reply(`${i}...`);
    }

    await ctx.reply("üíÄ –û—à–∏–±–∫–∞: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.");
  }

  private async handleSelfDestruct(ctx: CommandContext): Promise<void> {
    await ctx.reply("‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ —Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! ‚ö†Ô∏è");

    for (let i = 5; i > 0; i--) {
      await this.sleep(1000);
      await ctx.reply(`${i}...`);
    }

    await ctx.reply("üí• –ë–£–ú! –ê—Ö –¥–∞, —ç—Ç–æ –∂–µ –ø—Ä–æ—Å—Ç–æ —á–∞—Ç. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ.");
  }

  private async handlePingBehruz(ctx: CommandContext): Promise<void> {
    for (let i = 0; i < 3; i++) {
      await ctx.reply("@BEHruzM_17");
    }
  }

  // Add this function to create a seeded random number generator
  private createSeededRandom(seed: number) {
    return function () {
      // Simple mulberry32 algorithm for seeded random numbers
      let t = (seed += 0x6d2b79f5);
      t = Math.imul(t ^ (t >>> 15), t | 1);
      t ^= t + Math.imul(t ^ (t >>> 7), t | 61);
      return ((t ^ (t >>> 14)) >>> 0) / 4294967296;
    };
  }

  private async handle8ball(ctx: CommandContext): Promise<void> {
    const responses = [
      "–ë–µ—Å—Å–ø–æ—Ä–Ω–æ.",
      "–í–µ—Ä–æ—è—Ç–Ω–æ, –¥–∞.",
      "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ.",
      "–ù–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–π –Ω–∞ —ç—Ç–æ.",
      "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –Ω–µ—Ç.",
      "üí© –õ—É—á—à–µ –Ω–µ –∑–Ω–∞—Ç—å –æ—Ç–≤–µ—Ç–∞.",
    ];
    const answer = responses[Math.floor(Math.random() * responses.length)];
    await ctx.reply(`üé± ${answer}`);
  }

  private async handleTerebinder(ctx: CommandContext): Promise<void> {
    await ctx.reply("üîÆ –¢–µ—Ä–µ–±–∏–Ω–¥–µ—Ä –ø—Ä–æ–±—É–∂–¥–∞–µ—Ç—Å—è...");

    // Create a typing effect for dramatic effect
    const message = "‚ö° –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–≤–æ—é –∞—É—Ä—É... ‚ö°";
    let currentText = "...";

    const sentMessage = await ctx.reply(currentText);

    // Simulate typing effect by updating the message character by character
    for (let i = 0; i < message.length; i++) {
      const char = message[i];
      currentText += char;
      // if whitespace, skip
      if (char === " ") {
        continue;
      }
      if (i % 2 === 0) {
        continue;
      }
      await ctx.telegram.editMessageText(
        ctx.chat.id,
        sentMessage.message_id,
        undefined,
        currentText,
      );
      await this.sleep(300); // Delay between characters
    }

    await this.sleep(1000);

    // Generate a "random" but deterministic fortune based on the user's username
    const username = ctx.from.username || ctx.from.first_name;
    const today = new Date();
    const dailyIdentifier = `${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`;
    const usernameSeed = [...username].reduce(
      (sum, char) => sum + char.charCodeAt(0),
      0,
    );
    const dateSeed = [...dailyIdentifier].reduce(
      (sum, char) => sum + char.charCodeAt(0),
      0,
    );
    const combinedSeed = usernameSeed + dateSeed;
    // Create seeded random function
    const seededRandom = this.createSeededRandom(combinedSeed);

    // Then replace your getSeededIndex function with this simpler version
    const getRandomItem = <T>(array: T[]): T => {
      const index = Math.floor(seededRandom() * array.length);
      return array[index % array.length]!;
    };

    // Define fortune components with more variety and modularity
    // –ü–µ—Ä–≤–∞—è —á–∞—Å—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è - –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥
    const timeFramePrefixes = [
      "–ß–µ—Ä–µ–∑",
      "–†–æ–≤–Ω–æ —á–µ—Ä–µ–∑",
      "–ü—Ä–∏–º–µ—Ä–Ω–æ —á–µ—Ä–µ–∑",
      "–í —Ç–µ—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö",
    ];

    const timeFrameValues = [
      "3 –¥–Ω—è",
      "–Ω–µ–¥–µ–ª—é",
      "2 –Ω–µ–¥–µ–ª–∏",
      "–º–µ—Å—è—Ü",
      "42 —á–∞—Å–∞",
      "–ø–æ–ª–Ω–æ–ª—É–Ω–∏–µ",
      "—Ä–µ—Ç—Ä–æ–≥—Ä–∞–¥–Ω—ã–π –ú–µ—Ä–∫—É—Ä–∏–π",
    ];

    // –í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å - –º–µ—Å—Ç–æ —Å–æ–±—ã—Ç–∏—è
    const locations = [
      "–≤ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ",
      "–Ω–∞ —Ä–∞–±–æ—Ç–µ",
      "–≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ",
      "–≤ –æ—á–µ—Ä–µ–¥–∏ –∑–∞ –∫–æ—Ñ–µ",
      "–≤ –ø–æ–¥—ä–µ–∑–¥–µ",
      "–Ω–∞ –ø–µ—à–µ—Ö–æ–¥–Ω–æ–º –ø–µ—Ä–µ—Ö–æ–¥–µ",
      "–≤ —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–µ",
      "–≤ —Å–æ—Ü—Å–µ—Ç—è—Ö",
      "–≤–æ —Å–Ω–µ",
      "–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π, –∫–æ—Ç–æ—Ä–∞—è –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂–∞ –Ω–∞ –Ω–∞—à—É",
    ];

    // –¢—Ä–µ—Ç—å—è —á–∞—Å—Ç—å - –≥–ª–∞–≥–æ–ª (—á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç)
    const verbs = [
      "–≤—Å—Ç—Ä–µ—Ç–∏—à—å",
      "–Ω–∞–π–¥—ë—à—å",
      "–ø–æ–ª—É—á–∏—à—å",
      "—É—Å–ª—ã—à–∏—à—å",
      "—É–≤–∏–¥–∏—à—å",
      "–ø—Ä–∏–¥—É–º–∞–µ—à—å",
      "—Å–æ–∑–¥–∞—à—å",
      "–ø–æ—Ç–µ—Ä—è–µ—à—å",
      "–æ–±—Ä–µ—Ç—ë—à—å",
    ];

    // –ß–µ—Ç–≤–µ—Ä—Ç–∞—è —á–∞—Å—Ç—å - —á—Ç–æ –∏–º–µ–Ω–Ω–æ (–æ–±—ä–µ–∫—Ç)
    const objects = [
      "—á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–º–µ–Ω–∏—Ç —Ç–≤–æ—é –∂–∏–∑–Ω—å",
      "—Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–¥ –∫–æ—Ç–æ—Ä–æ–π –¥–∞–≤–Ω–æ –¥—É–º–∞–µ—à—å",
      "–Ω–æ–≤—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–±–æ—Ç–∫–∞",
      "–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
      "–≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞",
      "—É—Ç–µ—Ä—è–Ω–Ω—É—é –≤–µ—â—å –∏–∑ –¥–µ—Ç—Å—Ç–≤–∞",
      "–≤—Ç–æ—Ä–æ–π –Ω–æ—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–ø–∞–ª –ø—Ä–∏ —Å—Ç–∏—Ä–∫–µ –≤ 2018 –≥–æ–¥—É",
      "–æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±—è –¥–∞–≤–Ω–æ —Ç—Ä–µ–≤–æ–∂–∏—Ç",
      "–Ω–æ–≤–æ–µ —Ö–æ–±–±–∏, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤–Ω–µ–∑–∞–ø–Ω–æ –ø—Ä–µ—É—Å–ø–µ–µ—à—å",
      "–º–µ–º, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–Ω–µ—Ç –≤–∏—Ä—É—Å–Ω—ã–º –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–µ–±–µ",
    ];

    // –ü—è—Ç–∞—è —á–∞—Å—Ç—å - –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è
    const consequences = [
      "–≠—Ç–æ –ø—Ä–∏–Ω–µ—Å—ë—Ç —Ç–µ–±–µ —É–¥–∞—á—É",
      "–≠—Ç–æ –∑–∞—Å—Ç–∞–≤–∏—Ç —Ç–µ–±—è —É–ª—ã–±–∞—Ç—å—Å—è –Ω–µ–¥–µ–ª—é",
      "–≠—Ç–æ —Ä–µ—à–∏—Ç —Ç–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã",
      "–≠—Ç–æ –∏–∑–º–µ–Ω–∏—Ç —Ç–≤–æ–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–∏—Ä",
      "–≠—Ç–æ —Å—Ç–∞–Ω–µ—Ç –Ω–∞—á–∞–ª–æ–º —á–µ–≥–æ-—Ç–æ –±–æ–ª—å—à–æ–≥–æ",
      "–≠—Ç–æ –±—É–¥–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ, –Ω–æ –æ—á–µ–Ω—å –∑–∞–±–∞–≤–Ω–æ",
      "–û—Ç —ç—Ç–æ–≥–æ –∑–∞–≤–∏—Å–∏—Ç —Å—É–¥—å–±–∞ —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–∞, —Ö–æ—Ç—è —Ç—ã –æ–± —ç—Ç–æ–º –Ω–µ —É–∑–Ω–∞–µ—à—å",
      "–ò–∑-–∑–∞ —ç—Ç–æ–≥–æ —Ç—ã –ø—Ä–æ–ø—É—Å—Ç–∏—à—å –∞–≤—Ç–æ–±—É—Å, –Ω–æ —ç—Ç–æ –∫ –ª—É—á—à–µ–º—É",
      "–ë–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–æ–º—É —Ç—ã –≤—ã–∏–≥—Ä–∞–µ—à—å —Å–ø–æ—Ä —Å –∫–æ–ª–ª–µ–≥–æ–π",
      "–≠—Ç–æ —Å–¥–µ–ª–∞–µ—Ç —Ç–µ–±—è –Ω–µ–º–Ω–æ–≥–æ —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ",
    ];

    // –®–µ—Å—Ç–∞—è —á–∞—Å—Ç—å - —Å–æ–≤–µ—Ç
    const advicePrefixes = [
      "–ó–≤—ë–∑–¥—ã —Å–æ–≤–µ—Ç—É—é—Ç:",
      "–ß—Ç–æ–±—ã —ç—Ç–æ —Å–±—ã–ª–æ—Å—å:",
      "–í–∞–∂–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ:",
      "–¢–µ—Ä–µ–±–∏–Ω–¥–µ—Ä –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç:",
      "–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç –¥–Ω—è:",
      "–î—Ä–µ–≤–Ω—è—è –º—É–¥—Ä–æ—Å—Ç—å –¢–µ—Ä–µ–±–∏–Ω–¥–µ—Ä–∞ –≥–ª–∞—Å–∏—Ç:",
    ];

    const adviceContents = [
      "–Ω–æ—Å–∏ –≤ –∫–∞—Ä–º–∞–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –∑–µ–ª—ë–Ω–æ–µ",
      "–Ω–µ –ø—Ä–∏–Ω–∏–º–∞–π –≤–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –ø–æ —Å—Ä–µ–¥–∞–º",
      "—É–ª—ã–±–∞–π—Å—è —á–∞—â–µ –æ–±—ã—á–Ω–æ–≥–æ",
      "—Å–¥–µ–ª–∞–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –Ω–µ–∑–Ω–∞–∫–æ–º—Ü—É",
      "–ø–æ–ø—Ä–æ–±—É–π –Ω–æ–≤–æ–µ –±–ª—é–¥–æ",
      "—Å–º–µ–Ω–∏ —Ä–∏–Ω–≥—Ç–æ–Ω –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ",
      "–ø–æ–≥–æ–≤–æ—Ä–∏ —Å —Ä–∞—Å—Ç–µ–Ω–∏–µ–º –¥–æ–º–∞",
      "–Ω–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–º—É –¥—Ä—É–≥—É",
      "–ø–æ—Å–ª—É—à–∞–π –º—É–∑—ã–∫—É, –∫–æ—Ç–æ—Ä—É—é –Ω–∏–∫–æ–≥–¥–∞ —Ä–∞–Ω—å—à–µ –Ω–µ —Å–ª—É—à–∞–ª",
      "–≤—ã—á–∏—Å–ª–∏ —á–∏—Å–ª–æ –ü–∏ –¥–æ 10-–≥–æ –∑–Ω–∞–∫–∞ –∏ –ø—Ä–æ—à–µ–ø—á–∏ –µ–≥–æ –ø–µ—Ä–µ–¥ —Å–Ω–æ–º",
      "–ø–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –∑–∞–∫–∞—Ç –∏ –∑–∞–¥—É–º—á–∏–≤–æ –≤–∑–¥–æ—Ö–Ω–∏",
    ];

    // –°–µ–¥—å–º–∞—è —á–∞—Å—Ç—å - –ø—Ä–µ–¥–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–∏–µ
    const warningPrefixes = [
      "–ù–æ –æ—Å—Ç–µ—Ä–µ–≥–∞–π—Å—è:",
      "–ò–∑–±–µ–≥–∞–π:",
      "–û–ø–∞—Å–∞–π—Å—è:",
      "–ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω —Å:",
      "–¢–µ—Ä–µ–±–∏–Ω–¥–µ—Ä –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ—Ç:",
      "–°—É–¥—å–±–∞ —à–µ–ø—á–µ—Ç –æ–ø–∞—Å–µ–Ω–∏–µ:",
    ];

    const warningContents = [
      "–ª—é–¥–µ–π –≤ —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã—Ö –Ω–æ—Å–∫–∞—Ö",
      "—Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –æ –ø–æ–≥–æ–¥–µ —Å –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞–º–∏",
      "—á—ë—Ä–Ω—ã—Ö –∫–æ—à–µ–∫ —Å –±–µ–ª—ã–º–∏ –ø—è—Ç–Ω–∞–º–∏ (–æ–±—ã—á–Ω—ã–µ —á—ë—Ä–Ω—ã–µ –∫–æ—à–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã)",
      "–ø–æ–∫—É–ø–æ–∫ —Å–æ —Å–∫–∏–¥–∫–æ–π 42%",
      "–ø–µ—Å–µ–Ω, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –±—É–∫–≤—ã '–ö'",
      "—á–∏—Å–µ–ª, –¥–µ–ª—è—â–∏—Ö—Å—è –Ω–∞ 7",
      "–µ–¥—ã —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –¥–ª–∏–Ω–Ω–µ–µ —à–µ—Å—Ç–∏ –±—É–∫–≤",
      "—Å–æ–æ–±—â–µ–Ω–∏–π, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ä–æ–≤–Ω–æ –≤ –ø–æ–ª–¥–µ–Ω—å",
      "–¥–≤–µ—Ä–µ–π —Å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ —Ä—É—á–∫–∞–º–∏",
      "–ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ—Ä–≥–∞—é—Ç —á–∞—â–µ –æ–±—ã—á–Ω–æ–≥–æ",
    ];

    // –í–æ—Å—å–º–∞—è —á–∞—Å—Ç—å - —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç
    const randomFactPrefixes = [
      "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç:",
      "–¢–µ—Ä–µ–±–∏–Ω–¥–µ—Ä –∑–Ω–∞–µ—Ç, —á—Ç–æ:",
      "–ú–∞–ª–æ –∫—Ç–æ –∑–Ω–∞–µ—Ç, –Ω–æ:",
      "–°–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Å–µ–∫—Ä–µ—Ç–Ω–æ:",
      "–°—Ç—Ä–∞–Ω–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ:",
      "–¢–µ—Ä–µ–±–∏–Ω–¥–µ—Ä –ø–æ–¥—Å–º–æ—Ç—Ä–µ–ª –≤ —Ç–≤–æ—ë–º –±—É–¥—É—â–µ–º:",
    ];

    const randomFactContents = [
      "—Ç–≤–æ—ë –ª—é–±–∏–º–æ–µ —á–∏—Å–ª–æ –¥—É–º–∞–µ—Ç –æ —Ç–µ–±–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å",
      "–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π —Ç—ã –∏–∑–æ–±—Ä—ë–ª —Ç–µ–ª–µ–ø–æ—Ä—Ç",
      "—Ç–≤–æ–∏ –Ω–æ—Å–∫–∏ –æ–±—Ä–∞–∑—É—é—Ç —Ç–∞–π–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ",
      "—Ç–≤–æ–π —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –≤–µ–¥—ë—Ç –¥–Ω–µ–≤–Ω–∏–∫ –æ —Ç–µ–±–µ",
      "—Ç—ã –æ–¥–Ω–∞–∂–¥—ã —á—É—Ç—å –Ω–µ –≤—Å—Ç—Ä–µ—Ç–∏–ª –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç—å, –Ω–æ –Ω–µ –∑–∞–º–µ—Ç–∏–ª",
      "—Ç–≤–æ–π –∫–æ—Ç/—Å–æ–±–∞–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å) –ø–∏—à–µ—Ç –æ —Ç–µ–±–µ –º–µ–º—É–∞—Ä—ã",
      "—Ç—ã –±—É–¥–µ—à—å —É–ø–æ–º—è–Ω—É—Ç –≤ –∫–Ω–∏–≥–µ —Ä–µ–∫–æ—Ä–¥–æ–≤ —á–µ—Ä–µ–∑ 17 –ª–µ—Ç",
      "–∫—Ç–æ-—Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ",
      "—Ä–æ–≤–Ω–æ 7 —á–µ–ª–æ–≤–µ–∫ –ø–æ–º–Ω—è—Ç —Ç–µ–±—è –∏–∑ –¥–µ—Ç—Å–∫–æ–≥–æ —Å–∞–¥–∞",
      "–≤ —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ —Ç—ã –±—É–¥–µ—à—å —Å–ª—É—á–∞–π–Ω–æ —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞–Ω —Ç—É—Ä–∏—Å—Ç–æ–º",
    ];

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º username –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö, –Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
    const getSeededIndex = (array: any[], offset: number = 0): number => {
      return Math.abs((combinedSeed * (offset + 1)) % array.length);
    };

    // Use it to select items from your arrays
    const timeFramePrefix = getRandomItem(timeFramePrefixes);
    const timeFrameValue = getRandomItem(timeFrameValues);
    const location = getRandomItem(locations);
    const verb = getRandomItem(verbs);
    const object = getRandomItem(objects);
    const consequence = getRandomItem(consequences);
    const advicePrefix = getRandomItem(advicePrefixes);
    const adviceContent = getRandomItem(adviceContents);
    const warningPrefix = getRandomItem(warningPrefixes);
    const warningContent = getRandomItem(warningContents);
    const randomFactPrefix = getRandomItem(randomFactPrefixes);
    const randomFactContent = getRandomItem(randomFactContents);

    // Calculate accuracy using seeded random
    const accuracy = Math.floor(seededRandom() * 42) + 59; // 59% to 100%

    // Generate lucky numbers
    const luckyNumbers = [];
    for (let i = 0; i < 3; i++) {
      luckyNumbers.push(Math.floor(seededRandom() * 100) + 1);
    }

    // Make the fortune
    const fortuneText =
      `üîÆ *–ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ï –¢–ï–†–ï–ë–ò–ù–î–ï–†–ê –ù–ê –°–ï–ì–û–î–ù–Ø* üîÆ\n\n` +
      `üë§ *${username}*\n\n` +
      `üï∞Ô∏è *${timeFramePrefix} ${timeFrameValue}* ${location} —Ç—ã ${verb} ${object}. ${consequence}.\n\n` +
      `üí° *${advicePrefix}* ${adviceContent}.\n\n` +
      `‚ö†Ô∏è *${warningPrefix}* ${warningContent}.\n\n` +
      `üß† *${randomFactPrefix}* ${randomFactContent}.\n\n` +
      `üé≤ *–°—á–∞—Å—Ç–ª–∏–≤—ã–µ —á–∏—Å–ª–∞:* ${luckyNumbers.join(", ")}.\n\n` +
      `üìä *–¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è:* ${accuracy}%`;

    // Send the fortune
    await ctx.reply(fortuneText, { parse_mode: "Markdown" });

    await this.sleep(2000);

    // Generate a conclusion
    const conclusions = [
      "–¢–µ—Ä–µ–±–∏–Ω–¥–µ—Ä –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—à–∏–±–∞–µ—Ç—Å—è. –ü–æ—á—Ç–∏ –Ω–∏–∫–æ–≥–¥–∞. –ò–Ω–æ–≥–¥–∞. –†–µ–¥–∫–æ –±—ã–≤–∞–µ—Ç –ø—Ä–∞–≤, –µ—Å–ª–∏ —á–µ—Å—Ç–Ω–æ.",
      "–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ª–∏—á–Ω–æ –¥–ª—è —Ç–µ–±—è. –ò –¥–ª—è —Ç–µ—Ö, —É –∫–æ–≥–æ –ø–æ—Ö–æ–∂–µ–µ –∏–º—è.",
      "–¢–≤–æ—è —Å—É–¥—å–±–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è —Ç–µ–ø–µ—Ä—å –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞. –ó–∞–≤—Ç—Ä–∞ —Å–æ—Å—Ç–∞–≤–∏–º –Ω–æ–≤—É—é.",
      "–ï—Å–ª–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–µ —Å–±—É–¥–µ—Ç—Å—è, –∑–Ω–∞—á–∏—Ç, —Ç—ã –∂–∏–≤—ë—à—å –≤ –¥—Ä—É–≥–æ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π.",
      "–¢–µ—Ä–µ–±–∏–Ω–¥–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –≤—Å–µ —Å–≤–æ–∏ –º–∞–≥–∏—á–µ—Å–∫–∏–µ —Å–∏–ª—ã. –ü–µ—Ä–µ–∑–∞—Ä—è–¥–∫–∞ –∫ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–º—É –¥–Ω—é.",
      "–≠—Ç–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ç–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è. –ó–∞–≤—Ç—Ä–∞ –±—É–¥–µ—Ç —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–æ–≤–æ–µ!",
    ];

    const conclusionIndex = getSeededIndex(conclusions, 12);
    await ctx.reply(conclusions[conclusionIndex % conclusions.length]!);

    // –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    const nextPredictionTime = new Date();
    nextPredictionTime.setDate(nextPredictionTime.getDate() + 1);
    nextPredictionTime.setHours(12, 0, 0, 0);
    const timeUntilNextPrediction = nextPredictionTime.getTime() - Date.now();

    await ctx.reply(
      `üï∞Ô∏è *–°–ª–µ–¥—É—é—â–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑* ${Math.floor(timeUntilNextPrediction / (1000 * 60))} –º–∏–Ω—É—Ç.`,
      { parse_mode: "Markdown" },
    );
  }
}
